
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vpn-gateway
  labels:
    # Avoid variable substitution of shell variables bellow
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: pod-gateway
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  # See https://github.com/k8s-at-home/charts/blob/master/charts/pod-gateway/values.yaml
  values:

    addons:
      vpn:
        enabled: true
        type: openvpn
        openvpn:
          image:
            repository: dperson/openvpn-client
            pullPolicy: Allways
            tag: latest

        configFileSecret: openvpn

        livenessProbe: {}
        # exec:
        #    command:
        #      - sh
        #      - -c
        #      - if [ $(curl -s https://ipinfo.io/country) == 'US' ]; then exit 0; else exit $?; fi
        #  initialDelaySeconds: 30
        #  periodSeconds: 60
        #  failureThreshold: 1

        networkPolicy:
          enabled: true

          egress:
            - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
              ports:
              # VPN traffic
              - port: 443
                protocol: UDP
            - to:
              - ipBlock:
                  cidr: 10.0.0.0/8

    configmap:
      # -- configmap contains clients and gateway PODs setting
      enabled: true
      # -- Namespaces to create the configmap to.
      # It must list all namespaces where client PODs get deployed to.
      # The chart namespace is added automatically
      namespaces:
      - vpn-gateway
      - vpn
      data:
        # -- settings for gateway - defaults should usually be good
        # NOTE: if you change it you will need to manually restart all
        # containers using it
        settings.sh: |
          #!/bin/sh
          # hostname of the gateway - it must accept vxlan and DHCP traffic
          # clients get it as env variable
          GATEWAY_NAME="${gateway}"
          # K8S DNS IP address
          # clients get it as env variable
          K8S_DNS_IPS="${K8S_DNS_ips}"

          # Vxlan ID to use
          VXLAN_ID="42"
          # VXLAN need an /24 IP range not conflicting with K8S and local IP ranges
          VXLAN_IP_NETWORK="172.16.0"
          # Gateway IP within the VXLAN - client PODs will be routed through it
          VXLAN_GATEWAY_IP="${VXLAN_IP_NETWORK}.1"
          # Keep a range of IPs for static assignment in nat.conf
          VXLAN_GATEWAY_FIRST_DYNAMIC_IP=20

          # If using a VPN, interface name created by it
          VPN_INTERFACE=tun0
          # Prevent non VPN traffic to leave the gateway
          VPN_BLOCK_OTHER_TRAFFIC=true
          # Traffic to these IPs will be send through the K8S gateway
          VPN_LOCAL_CIDRS="10.0.0.0/8 192.168.0.0/16"

          # DNS queries to these domains will be resolved by K8S DNS instead of
          # the default (typcally the VPN client changes it)
          DNS_LOCAL_CIDRS="local"

        # -- settings to expose ports, usually through a VPN provider
        # NOTE: if you change it you will need to manually restart all
        # containers using it
        nat.conf: |
          # Configure client PODs with static IP addresses
          # and ports exposed through NAT
          # static IPs must be bellow VXLAN_GATEWAY_FIRST_DYNAMIC_IP
          #
          # hostname IP ports(coma separated)
          # Example:
          # transmission 10 tcp:18289,udp:18289
          torrent 10 tcp:18289,udp:18289
