apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: games-on-whales
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: games-on-whales
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  # See https://github.com/k8s-at-home/charts/blob/master/charts/games-on-whales/values.yaml
  values:
    nodeSelector:
      feature.node.kubernetes.io/custom-intel-gpu: "true"

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_GOW}
        externalIPs:
        - ${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_GOW}
        annotations:
          metallb.universe.tf/allow-shared-ip: games-on-whales
      udp:
        type: LoadBalancer
        loadBalancerIP: ${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_GOW}
        externalIPs:
        - ${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_GOW}
        annotations:
          metallb.universe.tf/allow-shared-ip: games-on-whales

    ingress:
      # -- Enable and configure ingress settings for the chart under this key.
      # @default -- See values.yaml
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/enable-global-auth: "false"
          ingress.kubernetes.io/whitelist-source-range: "192.168.2.0/16"
        hosts:
        - host: gow.home.${CLUSTER_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - gow.home.${CLUSTER_DOMAIN}
          
    persistence:
      home:
        type: pvc
        existingClaim: gow-pvc
      software:
        enabled: true
        type: custom
        volumeSpec:
          nfs: 
            server: ${NFS_SERVER}
            path: "${NFS_SOFTWARE}"
  
    sunshine:
      image:
        repository: ghcr.io/games-on-whales/sunshine
        tag: 1.0.0
        pullPolicy: IfNotPresent
      user: admin
      password: admin
    xorg:
      image:
        repository: ghcr.io/games-on-whales/xorg
        tag: 1.0.0
        pullPolicy: IfNotPresent
      refreshrate: 60
      resolution: 1920x1080
    pulseaudio:
      image:
        repository: ghcr.io/games-on-whales/pulseaudio
        tag: 1.0.0
        pullPolicy: IfNotPresent
    retroarch:
      enabled: true
      image:
        repository: ghcr.io/games-on-whales/retroarch
        tag: 1.0.0
        pullPolicy: IfNotPresent
      logLevel: info
      volumeMounts:
        - name: software
          mountPath: /home/retro/software
          #readOnly: true
    steam:
      enabled: false
      image:
        repository: ghcr.io/games-on-whales/steam
        tag: 1.0.0
        pullPolicy: IfNotPresent
      protonLog: 1
    firefox:
      enabled: false
      image:
        repository: andrewmackrodt/firefox-x11
        tag: 1.0.0
        pullPolicy: IfNotPresent
      volumeMounts: []
    mkhomeretrodirs:
      image:
        repository: busybox
        tag: 1.34.0
        pullPolicy: IfNotPresent

    # additionalContainers:
    #   retroarch:
    #     # Enable the following to debug retro arch
    #     securityContext:
    #       runAsUser: 0
    #     command:
    #     - /bin/sh
    #     - -c
    #     - while true; do
    #       sleep 600 &
    #       wait $!;
    #       done
    #   gnome:
    #     image: x11docker/gnome:latest
    #     imagePullPolicy: IfNotPresent
    #     securityContext:
    #       privileged: true
    #     env:
    #     - name: DISPLAY
    #       value: ":99"
    #     - name: PULSE_SERVER
    #       value: "/tmp/pulse/pulse-socket"
    #     volumeMounts:
    #     - name: audio-socket
    #       mountPath: /tmp/pulse
    #     - name: xorg
    #       mountPath: /tmp/.X11-unix
  valuesFrom:
  - kind: Secret
    name: "games-on-whales"
    valuesKey: values.yaml
    optional: false
