apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: music-assistant
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
  # See https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    image:
      repository: ghcr.io/music-assistant/server
      tag: 2.1.0

    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |
        [{
          "name":"macvlan-static",
          "namespace": "kube-system",
          "ips": ["${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_MACVLAN_MA}"]
        }]

    service:
      main:
        enabled: true
        ports:
          http:
            port: 8095

    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: home-manager
          hajimari.io/info: Music Assistant for Home Assistant
          hajimari.io/group: media
        hosts:
        - host: "ma.pub.${CLUSTER_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "ma.pub.${CLUSTER_DOMAIN}"
      home:
        enabled: true
        annotations:
          hajimari.io/enable: "false"
          nginx.ingress.kubernetes.io/enable-global-auth: "false"
          nginx.ingress.kubernetes.io/whitelist-source-range: "${INGRESS_WHITELIST_SOURCE_RANGE}"
        hosts:
        - host: "ma.home.${CLUSTER_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
        tls:
        - hosts:
          - "ma.home.${CLUSTER_DOMAIN}"

    persistence:
      data:
        enabled: true
        mountPath: /data
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_KUBERNETES}/music-manager/data"
      music:  
        enabled: true
        mountPath: /music
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_MUSIC}"
      downloads:
        enabled: true
        mountPath: /downloads
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_DOWNLOADS}"
