---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
  # See https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    controllers:
      main:
        containers:
          app:
            image:
              repository: docker.io/jellyfin/jellyfin
              tag: 10.11.0
            env:
              TZ: "Europe/Berlin"
              JELLYFIN_CACHE_DIR: "/config/cache"
            securityContext:
              supplementalGroups:
              #   # Hardware acceleration using an Intel iGPU w/ QuickSync
              #   # These IDs below should be matched to your `video` and `render` group on the host
              #   # To obtain those IDs run the following grep statement on the host:
              #   # $ cat /etc/group | grep "video\|render"
              - 44
              - 109
              - 100
            resources:
              requests:
                #gpu.intel.com/i915: 1
                cpu: 500m
                memory: 1000Mi
              limits:
                #gpu.intel.com/i915: 1
                memory: 8000Mi
    
    persistence:
      config:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_KUBERNETES}/jellyfin/config"
      transcode:
        enabled: true
        type: emptyDir
        #medium: "Memory"
        sizeLimit: 10Gi
      videos:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_VIDEO}"
      music:  
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_MUSIC}"
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_DOWNLOADS}"

    service:
      main:
        controller: main
        type: LoadBalancer
        loadBalancerIP: ${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_JELLYFIN}
        externalIPs:
        - ${CLUSTER_EXTERNAL_SUBNET_PREFIX}.${CLUSTER_LB_JELLYFIN}
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096

    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:jellyfin
          hajimari.io/info: Video and Music Player
          hajimari.io/group: media
          nginx.ingress.kubernetes.io/enable-global-auth: "false"
        hosts:
        - host: jellyfin.home.${CLUSTER_DOMAIN}
          paths: &paths
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: http
        - host: jellyfin.pub.${CLUSTER_DOMAIN}
          paths: *paths
